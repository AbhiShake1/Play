/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GamesImport } from './routes/_games'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as DemoFormImport } from './routes/demo.form'
import { Route as GamesSnakeImport } from './routes/_games/snake'
import { Route as DemoSentryBadEventHandlerImport } from './routes/demo.sentry.bad-event-handler'

// Create/Update Routes

const GamesRoute = GamesImport.update({
  id: '/_games',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const DemoFormRoute = DemoFormImport.update({
  id: '/demo/form',
  path: '/demo/form',
  getParentRoute: () => rootRoute,
} as any)

const GamesSnakeRoute = GamesSnakeImport.update({
  id: '/snake',
  path: '/snake',
  getParentRoute: () => GamesRoute,
} as any)

const DemoSentryBadEventHandlerRoute = DemoSentryBadEventHandlerImport.update({
  id: '/demo/sentry/bad-event-handler',
  path: '/demo/sentry/bad-event-handler',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_games': {
      id: '/_games'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GamesImport
      parentRoute: typeof rootRoute
    }
    '/_games/snake': {
      id: '/_games/snake'
      path: '/snake'
      fullPath: '/snake'
      preLoaderRoute: typeof GamesSnakeImport
      parentRoute: typeof GamesImport
    }
    '/demo/form': {
      id: '/demo/form'
      path: '/demo/form'
      fullPath: '/demo/form'
      preLoaderRoute: typeof DemoFormImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/demo/sentry/bad-event-handler': {
      id: '/demo/sentry/bad-event-handler'
      path: '/demo/sentry/bad-event-handler'
      fullPath: '/demo/sentry/bad-event-handler'
      preLoaderRoute: typeof DemoSentryBadEventHandlerImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface GamesRouteChildren {
  GamesSnakeRoute: typeof GamesSnakeRoute
}

const GamesRouteChildren: GamesRouteChildren = {
  GamesSnakeRoute: GamesSnakeRoute,
}

const GamesRouteWithChildren = GamesRoute._addFileChildren(GamesRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof GamesRouteWithChildren
  '/snake': typeof GamesSnakeRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/sentry/bad-event-handler': typeof DemoSentryBadEventHandlerRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof GamesRouteWithChildren
  '/snake': typeof GamesSnakeRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/sentry/bad-event-handler': typeof DemoSentryBadEventHandlerRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_games': typeof GamesRouteWithChildren
  '/_games/snake': typeof GamesSnakeRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/sentry/bad-event-handler': typeof DemoSentryBadEventHandlerRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/snake'
    | '/demo/form'
    | '/demo/tanstack-query'
    | '/demo/sentry/bad-event-handler'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/snake'
    | '/demo/form'
    | '/demo/tanstack-query'
    | '/demo/sentry/bad-event-handler'
  id:
    | '__root__'
    | '/'
    | '/_games'
    | '/_games/snake'
    | '/demo/form'
    | '/demo/tanstack-query'
    | '/demo/sentry/bad-event-handler'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GamesRoute: typeof GamesRouteWithChildren
  DemoFormRoute: typeof DemoFormRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoSentryBadEventHandlerRoute: typeof DemoSentryBadEventHandlerRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GamesRoute: GamesRouteWithChildren,
  DemoFormRoute: DemoFormRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoSentryBadEventHandlerRoute: DemoSentryBadEventHandlerRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_games",
        "/demo/form",
        "/demo/tanstack-query",
        "/demo/sentry/bad-event-handler"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_games": {
      "filePath": "_games.tsx",
      "children": [
        "/_games/snake"
      ]
    },
    "/_games/snake": {
      "filePath": "_games/snake.tsx",
      "parent": "/_games"
    },
    "/demo/form": {
      "filePath": "demo.form.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/demo/sentry/bad-event-handler": {
      "filePath": "demo.sentry.bad-event-handler.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
